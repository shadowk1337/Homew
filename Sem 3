Task 1
#include <stdio.h>
#define ArSize 50

int main(){
    char seq[ArSize];
    int i = 0, buff, flag;
    while ((seq[i] = getchar()) != '\n')
        i++;
    buff = seq[0];
    if (seq[0] == '-')
        printf("-");
    for (int j = 1; j < i; j++){
        if (buff == '-' && seq[j] == '-'){
            printf("-");
            buff = '-';
            continue;
            }
        if (seq[j] == '-') {
            flag = 1;
            continue;
        }
        if (flag == 1 && buff > seq[j]){
            for (int x = buff; x >= seq[j]; x--)
                printf("%c", x);
        }else if (flag == 1 && buff <= seq[j]){
            for (int x = buff; x <= seq[j]; x++)
                printf("%c", x);
        }
        flag = 0;
        buff = seq[j];
    }
}

Task 2
#include <stdio.h>
#include <limits.h>
#define ArSize 50

int main(){
    char s1[ArSize];
    char s2[ArSize];
    char c;
    int i = 0, j = 0;
    while ((c = getchar()) != '\n'){
        s1[i] = c;
        i++;
    }
    while ((c = getchar()) != '\n'){
        s2[j] = c;
        j++;
    }
    for (int v = 0; v <= i; v++){
        for (int x = 0; x <= j; x++){
            if (s1[v] == s2[x])
                s1[v] = 0;
        }
    }
    for (int x = 0; x <= i; x++){
        if (s1[x] != 0)
            printf ("%c", s1[x]);
    }
    return 0;
}

Task 3
#include <stdio.h>
#define MaxArr 10

int main()
{
    int arr[MaxArr] = {0};
    int c;
    while ((c = getchar()) != '\n'){
        switch (c){
            case '0':
                arr[0]++;
                break;
            case '1':
                arr[1]++;
                break;
            case '2':
                arr[2]++;
                break;
            case '3':
                arr[3]++;
                break;
            case '4':
                arr[4]++;
                break;
            case '5':
                arr[5]++;
                break;
            case '6':
                arr[6]++;
                break;
            case '7':
                arr[7]++;
                break;
            case '8':
                arr[8]++;
                break;
            case '9':
                arr[9]++;
                break;
        }
    }
    printf("======================\n");
    printf("horizontal\n");
    printf("======================\n");
    for (int i = 0; i < MaxArr; i++){
        printf("%d:", i);
        for (int j = 0; j < arr[i]; j++)
            printf("%c", '#');
        printf("\n");
    }
    printf("\n");
    printf("======================\n");
    printf("vertical\n");
    printf("======================\n");
//поиск максимума
    int max = arr[0];
    int number;
    for (int i = 1; i < MaxArr; i++){
        if (arr[i] > max){
            max = arr[i];
            number = i;
        }
    }
    while (max != 0) {
        for (int i = 0; i < MaxArr; i++){
            if (arr[i] == max){
                printf("%c ", '#');
                arr[i]--;
            }else
                printf("  ");

        }
        max--;
        printf("\n");
    }
    for (int j = 0; j < MaxArr; j++)
        printf("%d ", j);
    return 0;
}
