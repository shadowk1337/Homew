Task 1
#include <stdio.h>
#define ArSize 50

int search (char ar1[], int ar1size, char ar2[], int ar2size);

int main() {
    char s1[ArSize];
    char s2[ArSize];
    int count1 = 0, count2 = 0;
    while (1 != 0) {
        count1 = 0, count2 = 0;
        printf("> ");
        while ((s1[count1] = getchar()) != '\n')
            count1++;
        printf("> ");
        while ((s2[count2] = getchar()) != '\n')
            count2++;
        printf("%d\n", search(s1, count1, s2, count2));
    }
    return 0;
}

int search (char ar1[], int ar1size, char ar2[], int ar2size){
    int i;
    for (i = 0; i < ar1size; i++) {
        for (int j = 0; j < ar2size; j++)
            if (ar1[i] == ar2[j]) {
                return i + 1;
            }
    }
    return -1;
}

Task 2
#include <stdio.h>
#include <math.h>

double calculate (int a, int b, char c);
int read (int val);

int main()
{
    int val1;
    double res;
    int i = 0;
    printf("> ");
    scanf("%d", &val1);
    res = read(val1);
    while (i != 1){
        res = read(res);
        i++;
    }
    printf("%g", res);
    return 0;
}

int read (int val){
    int b;
    char optn;
    double res;
    scanf("%d", &b);
    scanf(" %c", &optn);
    printf("op %c\n", optn);
    res = calculate(val, b, optn);
    return res;
}

double calculate (int a, int b, char c){
    switch(c){
        case ('+'):
            return a + b;
            break;
        case ('-'):
            return a - b;
            break;
        case ('*'):
            return a * b;
            break;
        case ('/'):
            return a / b;
            break;
        case ('^'):
            return pow(a, b);
            break;
        case ('%'):
            return a % b;
            break;
        case ('s'):
            return sin(a);
            break;
        case ('c'):
            return cos(a);
            break;
    }
}
